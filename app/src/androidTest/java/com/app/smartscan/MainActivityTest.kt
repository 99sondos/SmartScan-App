package com.app.smartscanimport androidx.compose.ui.test.junit4.createAndroidComposeRuleimport androidx.compose.ui.test.onNodeWithTextimport androidx.compose.ui.test.performClickimport androidx.test.ext.junit.runners.AndroidJUnit4import androidx.test.platform.app.InstrumentationRegistryimport android.content.Intentimport org.junit.Ruleimport org.junit.Testimport org.junit.runner.RunWith@RunWith(AndroidJUnit4::class)class MainActivityTest {    @get:Rule    val composeRule = createAndroidComposeRule<MainActivity>()    @Test    fun clickSkinAnalyzer_startsSkinAnalyzerActivity() {        // Tryck på knappen "Skin Analyzer"        composeRule.onNodeWithText("Skin Analyzer").performClick()        // Verifiera att nästa aktivitet är SkinAnalyzerActivity        val context = InstrumentationRegistry.getInstrumentation().targetContext        val expectedIntent = Intent(context, com.app.smartscan.analysis.SkinAnalyzerActivity::class.java)        assert(expectedIntent.component?.className?.contains("SkinAnalyzerActivity") == true)    }    @Test    fun clickOcrReader_startsAiCameraActivity_withOcrType() {        composeRule.onNodeWithText("OCR Text Reader").performClick()        val context = InstrumentationRegistry.getInstrumentation().targetContext        val expectedIntent = Intent(context, com.app.smartscan.aiCamera.AiCameraActivity::class.java)        expectedIntent.putExtra("analysis_type", "ocr")        assert(expectedIntent.hasExtra("analysis_type"))    }    @Test    fun clickBarcodeScanner_startsAiCameraActivity_withBarcodeType() {        composeRule.onNodeWithText("Barcode Scanner").performClick()        val context = InstrumentationRegistry.getInstrumentation().targetContext        val expectedIntent = Intent(context, com.app.smartscan.aiCamera.AiCameraActivity::class.java)        expectedIntent.putExtra("analysis_type", "barcode")        assert(expectedIntent.hasExtra("analysis_type"))    }}